var nkomoLearningApp=angular.module("learn",["ngStorage","ngRoute","nkomo.controllers","nkomo.directives","nkomo.services","nkomo.rover"]),_appVersion="0.1.1",_isLocal="localhost"==window.location.hostname||window.location.hostname.match(/.*\.local$/i)||window.location.hostname.match(/.*\.vagrant$/i)?!0:!1,_assetVersion=_isLocal?Date.now():_appVersion,_apiEndpoint=_isLocal?"http://dinkomo.vagrant/0.1":"http://dinkomo.frnk.ca/0.1";nkomoLearningApp.constant("appVersion",_appVersion).constant("isLocalEnvironment",_isLocal).constant("assetVersion",_assetVersion).constant("apiEndpoint",_apiEndpoint);var nkomoServices=angular.module("nkomo.services",["nkomo.rover"]),nkomoDirectives=angular.module("nkomo.directives",["nkomo.rover"]),nkomoControllers=angular.module("nkomo.controllers",["nkomo.rover"]);nkomoLearningApp.config(["$routeProvider","assetVersion",function(o,e){return o.when("/",{redirectTo:"/dict"}).when("/about",{templateUrl:"/views/about.html?"+e,controller:"PageController"}).when("/account",{templateUrl:"/views/account.html?"+e,controller:"AccountController"}).when("/login",{templateUrl:"/views/login.html?"+e,controller:"AccountController"}).when("/stats",{templateUrl:"/views/stats.html?"+e,controller:"PageController"}).when("/dict/:searchTerm?",{templateUrl:"/views/search.html?"+e,controller:"SearchController"}).when("/:langCode",{templateUrl:"/views/search.html?"+e,controller:"SearchController"}).when("/:langCode/define/:searchTerm",{templateUrl:"/views/definition.html?"+e,controller:"ViewDefinitionController"}).when("/:langCode/poem/:searchTerm",{templateUrl:"/views/poem.html?"+e,controller:"ViewDefinitionController"}).when("/:langCode/%2Badd/:definitionType",{templateUrl:"/views/forms/add-word.html?"+e,controller:"AddDefinitionController"}).when("/edit/definition/:definitionId",{templateUrl:"/views/forms/edit-definition.html?"+e,controller:"EditDefinitionController"}).otherwise({redirectTo:"/dict"})}]).run(["$rootScope","$location","Rover",function(o,e,n){n.debug("Running app..."),$(document).ready(function(){n.debug("Document ready."),$(function(){$('[data-toggle="tooltip"]').tooltip()})})}]);
angular.module("nkomo.controllers").controller("AccountController",["$scope","$location","AccountService","Rover",function(t,o,e,n){return"/login"==o.path()||e.hasToken()?(t.login=function(){n.debug("Authenticating: "+t.email),e.authenticate(t.email,t.password)},t.localAuth=e.authURIs.local,t.facebookAuth=e.authURIs.facebook,t.googleAuth=e.authURIs.google,t.linkedinAuth=e.authURIs.linkedin,void(t.twitterAuth=e.authURIs.twitter)):e.setCredentials(o.path())}]);
angular.module("nkomo.controllers").controller("AddDefinitionController",["$scope","$routeParams","$sessionStorage","$location","AccountService","DefinitionService","LanguageService","Rover",function(e,n,i,t,o,a,r,d){d.debug("AddDefinitionController"),e.definitionType=n.definitionType,e.formData={types:{word:{adj:"Adjective",adv:"Adverb",conn:"Connective",ex:"Exclamation",pre:"Preposition",pro:"Pronoun",n:"Noun",v:"Verb"}}},e.definition={subType:"n"},e.store=function(){d.debug("Saving definition...");var n={title:e.definition.title,alt_titles:e.definition.altTitles||"",type:0,sub_type:e.definition.subType,translations:e.definition.translations,languages:[e.language.code]};e.definition.id?a.update:a.create;a.create(n).then(function(n){t.path("/"+e.language.code+"/define/"+n.data.title.replace(" ","_"))},function(e){d.debug("on error..."),d.debug(e)})}}]);
angular.module("nkomo.controllers").controller("EditDefinitionController",["$scope","$routeParams","$sessionStorage","$location","AccountService","DefinitionService","LanguageService","Rover",function(i,n,e,t,o,d,r,a){a.debug("EditDefinitionController"),i.definitionId=n.definitionId,i.definition=e.definitions[n.definitionId]||null,i.formData=e.definitionFormData||null,i.definition||(a.debug('Retrieving definition # "'+i.definitionId+'"...'),d.get(i.definitionId).then(function(t){i.definition=e.definitions[n.definitionId]=t.data},function(i){a.debug("Could not retrieve definition data: "+i.responseText)})),i.definitionForm={subType:"n"},i.store=function(){a.debug("Saving definition...");var n={title:i.definitionForm.title,alt_titles:i.definitionForm.altTitles||"",type:0,sub_type:i.definitionForm.subType,translations:i.definitionForm.translations,languages:[i.language.code]};i.definitionForm.id?d.update:d.create;d.create(n).then(function(n){t.path("/"+i.language.code+"/define/"+n.data.title.replace(" ","_"))},function(i){a.debug("on error..."),a.debug(i)})}}]);
angular.module("nkomo.controllers").controller("ViewDefinitionController",["$scope","$routeParams","$sessionStorage","$location","AccountService","DefinitionService","LanguageService","Rover",function(e,n,i,o,a,t,r,g){if(g.debug("ViewDefinitionController"),e.langCode=n.langCode,e.searchTerm=n.searchTerm?n.searchTerm.replace("_"," "):!1,n.definitionId){if(!a.hasToken())return a.setCredentials(o.path());g.debug("Definition: "+n.definitionId)}e.language=i.languages[n.langCode]||null,e.language||(g.debug('Retrieving language with code "'+e.langCode+'"...'),r.get(e.langCode).then(function(o){e.language=i.languages[n.langCode]=o.data},function(e){g.debug("Could not retrieve language data: "+e.responseText)})),e.searchTerm&&(e.definitions=i.definitions[n.searchTerm]||null,e.definitions||(g.debug('Retrieving definitions for "'+e.searchTerm+'"...'),t.match(e.searchTerm).then(function(o){e.definitions=i.definitions[n.searchTerm]=o.data},function(e){g.debug("Could not retrieve definitions.")})))}]);
angular.module("nkomo.controllers").controller("MainController",["$scope","$sessionStorage","$localStorage","AccountService","Rover","assetVersion",function(o,e,n,s,a,l){o.assetVersion=l,e.languages=e.languages||{},e.definitions=e.definitions||{},o.toggleNav=function(){$("aside .toggles").toggleClass("hidden-xs")},o.hasToken=s.hasToken()}]);
angular.module("nkomo.controllers").controller("PageController",["$scope",function(o){}]);
angular.module("nkomo.controllers").controller("SearchController",["$scope","$routeParams","$sessionStorage","LanguageService","DefinitionService","SearchFactory","Rover",function(e,n,a,o,r,i,t){t.debug("SearchController"),e.searchTerm=n.searchTerm?n.searchTerm.replace("_"," "):null,e.langCode=n.langCode,e.language=n.langCode?a.languages[n.langCode]||null:!1,null===e.language&&(t.debug('Retrieving language with code "'+e.langCode+'"...'),o.get(e.langCode).then(function(n){e.language=a.languages[e.langCode]=n.data},function(e){t.debug("Could not retrieve language data.")})),e.results=null,e.lookup=function(n,a){n=n||e.searchTerm,a=a||e.langCode,n.length<1||(a?e.lookupDefinition(n,a):e.lookupAnything(n,a))},e.lookupDefinition=function(n,a){t.debug('Looking up definitions matching "'+n+'"...'),e.results=[],e.isSearching=!0,r.search(n,"word",a).then(function(n){e.isSearching=!1,e.results=n.data},function(n){t.debug("Error"),t.debug(n),e.isSearching=!1})},e.lookupAnything=function(n,a){t.debug('Looking up anything matching "'+n+'"...'),e.results=[],e.isSearching=!0,i.any(n).then(function(n){e.isSearching=!1,e.results=n.data},function(n){t.debug("Error"),t.debug(n),e.isSearching=!1})},e.clear=function(){e.results=null,e.searchTerm=""},e.url=function(e){if(!e||!e.type)return"#/dict";var n="#/dict",a=e.title.replace(" ","_");switch(e.type){case"word":n="#/"+e.mainLanguage.code+"/define/"+a}return n},n.searchTerm&&e.lookup()}]);
angular.module("nkomo.services").service("AccountService",["$window","$location","$http","$sessionStorage","Rover","apiEndpoint",function(t,a,n,o,e,i){o.auth=o.auth||{token:!1},this.authURIs={local:i+"/auth/local",facebook:i+"/auth/facebook",google:i+"/auth/google",linkedin:i+"/auth/linkedin",twitter:i+"/auth/twitter"},this.authenticate=function(t,n,o){a.path("http://api.dinkomo.vagrant/auth")},this.hasToken=function(){return this.isAuthenticated()},this.isAuthenticated=function(){return o.auth.token&&o.auth.token.length>0},this.setCredentials=function(a){o.auth.returnTo=a;var n=e.isLocal?"app.vagrant":"app";t.location.href="http://api.dinkomo.vagrant/auth?next="+n}}]);
angular.module("nkomo.services").factory("DefinitionService",["$http","apiEndpoint","Rover",function(t,n,e){return{count:function(e){return e=e||"word",t.get(n+"/"+e+"/count")},get:function(e){return t.get(n+"/definition/"+e)},match:function(e){return t.get(n+"/definition/title/"+e)},search:function(e,i,o,r){o=o||"",i=i||"word";var u=n+"/"+i+"/search/"+e;return u+="?lang="+o,u+="&method=fulltext",t({method:"GET",url:u})},create:function(e){return t.post(n+"/definition",e)},update:function(t){},"delete":function(t){}}}]);
angular.module("nkomo.services").factory("LanguageService",["$http","apiEndpoint",function(n,t){return{count:function(){return n.get(t+"/language/count")},get:function(e){return n.get(t+"/language/"+e)}}}]);
angular.module("nkomo.rover",[]).service("Rover",["$window","$sessionStorage","$route","$location",function(o,e,n,t){this.timestamp=Date.now(),this.isLocal="localhost"==window.location.hostname||window.location.hostname.match(/.*\.local$/i)||window.location.hostname.match(/.*\.vagrant$/i)?!0:!1,e.definitionFormData={types:{0:{title:"word",subTypes:{adj:"adjective",adv:"adverb",conn:"connective",ex:"exclamation",pre:"preposition",pro:"pronoun",n:"noun",v:"verb"}},1:{title:"name",subTypes:{fam:"family",given:"given"}},10:{title:"phrase",subTypes:{ex:"expression",prov:"proverb",saying:"sayng"}},20:{title:"poem",subTypes:{}},30:{title:"story",subTypes:{}}}},this.debug=function(o){this.isLocal&&console&&console.log(o)}}]);
angular.module("nkomo.services").factory("SearchFactory",["$http","apiEndpoint",function(t,n){return{any:function(e){return t.get(n+"/search/"+e+"?method=fulltext")}}}]);
//# sourceMappingURL=learn.js.map