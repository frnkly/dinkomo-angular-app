{"version":3,"sources":["app.js","controllers/config.js","controllers/definition.js","controllers/main.js","controllers/page.js","controllers/search.js","services/definition.js","services/rover.js"],"names":["nkomoLearningApp","angular","module","_appVersion","_isLocal","window","location","hostname","match","_assetVersion","Date","now","constant","nkomoServices","nkomoDirectives","nkomoControllers","config","$routeProvider","assetVersion","when","redirectTo","templateUrl","controller","otherwise","run","$rootScope","$location","Rover","debug","$scope","$routeParams","DefinitionFactory","searchTerm","replace","langCode","results","lookup","length","isSearching","search","then","response","data","clear","url","def","type","alias","title","mainLanguage","code","factory","$http","apiEndpoint","count","get","term","definitionType","searchMethod","endpoint","method","service","$window","$sessionStorage","$route","this","timestamp","isLocal","msg","console","log"],"mappings":"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","file":"learn.js","sourcesContent":["/**\n * Main angular application.\n *\n */\nvar nkomoLearningApp = angular.module('learn', [\n    'ngStorage', 'ngRoute',\n    'nkomo.controllers', 'nkomo.directives', 'nkomo.services', 'nkomo.rover'\n]);\n\n//\n// App constants.\n//\n\nvar _appVersion = '0.0.2';\nvar _isLocal =\n    (window.location.hostname == 'localhost' ||\n        window.location.hostname.match(/.*\\.local$/i) ||\n        window.location.hostname.match(/.*\\.vagrant$/i)) ? true : false;\nvar _assetVersion = _isLocal ? Date.now() : _appVersion;\n\nnkomoLearningApp.constant('appVersion', _appVersion)\n                .constant('isLocalEnvironment', _isLocal)\n                .constant('assetVersion', _assetVersion);\n\n//\n// Initialize modules so that we can use them from different files.\n//\n\nvar nkomoServices = angular.module('nkomo.services', ['nkomo.rover']);\nvar nkomoDirectives = angular.module('nkomo.directives', ['nkomo.rover']);\nvar nkomoControllers = angular.module('nkomo.controllers', ['nkomo.rover']);\n\n//\n// Configures the application.\n//\n\nnkomoLearningApp.config(['$routeProvider', 'assetVersion',\n    function($routeProvider, assetVersion) {\n\n        // Landing page.\n        return $routeProvider.when('/', {\n            redirectTo: '/dict'\n        })\n\n        // About page.\n        .when('/about', {\n\t\t\ttemplateUrl: '/views/about.html?' + assetVersion,\n            controller: 'PageController'\n\t\t})\n\n        // Stats page.\n        .when('/stats', {\n\t\t\ttemplateUrl: '/views/stats.html?' + assetVersion,\n            controller: 'PageController'\n\t\t})\n\n        // Search pages.\n        .when('/dict/:searchTerm?', {\n\t\t\ttemplateUrl: '/views/search.html?' + assetVersion,\n            controller: 'SearchController'\n        })\n        .when('/:langCode', {\n\t\t\ttemplateUrl: '/views/search.html?' + assetVersion,\n            controller: 'SearchController'\n        })\n\n        // Dictionary pages.\n        .when('/:langCode/define/:searchTerm', {\n\t\t\ttemplateUrl: '/views/definition.html?' + assetVersion,\n            controller: 'DefinitionController'\n        })\n        .when('/:langCode/poem/:searchTerm', {\n\t\t\ttemplateUrl: '/views/poem.html?' + assetVersion,\n            controller: 'DefinitionController'\n        })\n\n        // Else, redirect to search page.\n        .otherwise({\n\t\t\tredirectTo: '/dict'\n\t\t});\n    }\n])\n\n// Runs the application.\n.run(['$rootScope', '$location', 'Rover',\n    function ($rootScope, $location, Rover) {\n\n        Rover.debug('Running app...');\n\n    }\n]);\n","\r\nangular.module('nkomo.controllers')\r\n\r\n.controller('ConfigController', ['$scope',\r\n    function($scope) {\r\n\r\n    }\r\n]);\r\n","/**\r\n *\r\n */\r\nangular.module('nkomo.controllers')\r\n\r\n.controller('DefinitionController', ['$scope', '$routeParams', 'DefinitionFactory', 'Rover',\r\n    function($scope, $routeParams, DefinitionFactory, Rover) {\r\n\r\n        Rover.debug('DefinitionController');\r\n\r\n        // Search parameters.\r\n        $scope.searchTerm = $routeParams.searchTerm.replace('_', ' ');\r\n        $scope.langCode = $routeParams.langCode;\r\n\r\n    }\r\n]);\r\n","\r\nangular.module('nkomo.controllers').controller('MainController', ['$scope', 'assetVersion',\r\n    function($scope, assetVersion) {\r\n\r\n        $scope.assetVersion = assetVersion;\r\n\r\n    }\r\n]);\r\n","/**\r\n * \r\n */\r\nangular.module('nkomo.controllers')\r\n\r\n.controller('PageController', ['$scope',\r\n    function($scope) {\r\n\r\n    }\r\n]);\r\n","/**\r\n *\r\n */\r\nangular.module('nkomo.controllers')\r\n\r\n.controller('SearchController', ['$scope', '$routeParams', 'DefinitionFactory', 'Rover',\r\n    function($scope, $routeParams, DefinitionFactory, Rover) {\r\n\r\n        Rover.debug('SearchController');\r\n\r\n        // Search parameters.\r\n        $scope.searchTerm = $routeParams.searchTerm ? $routeParams.searchTerm.replace('_', ' ') : null;\r\n        $scope.langCode = $routeParams.langCode;\r\n\r\n        // Search results.\r\n        $scope.results = [];\r\n\r\n        // Looks up a word\r\n        $scope.lookup = function(searchTerm, langCode)\r\n        {\r\n            // Default values.\r\n            searchTerm = searchTerm || $scope.searchTerm;\r\n            langCode = langCode || $scope.langCode;\r\n\r\n            // Performance check.\r\n            if (searchTerm.length < 1) {\r\n                return;\r\n            }\r\n\r\n            Rover.debug('Looking up \"'+ searchTerm +'\"...');\r\n\r\n            // Notify user that we're querying the API.\r\n            $scope.results = [];\r\n            $scope.isSearching = true;\r\n\r\n            DefinitionFactory.search(searchTerm, 'word', langCode).then(\r\n\r\n                // On success.\r\n                function(response) {\r\n                    $scope.isSearching = false;\r\n                    $scope.results = response.data;\r\n                },\r\n\r\n                // On error.\r\n                function(response) {\r\n                    Rover.debug('Error');\r\n                    Rover.debug(response);\r\n                    $scope.isSearching = false;\r\n                }\r\n            );\r\n        };\r\n\r\n        // Clears the search form.\r\n        $scope.clear = function()\r\n        {\r\n            $scope.results = [];\r\n            $scope.searchTerm = '';\r\n        };\r\n\r\n        // Generates the URL for a definition.\r\n        $scope.url = function(def)\r\n        {\r\n            // Performance check.\r\n            if (!def || !def.type) {\r\n                return '#/dict';\r\n            }\r\n\r\n            var url = '#/dict', alias = def.title.replace(' ', '_');\r\n\r\n            switch (def.type)\r\n            {\r\n                case 'word':\r\n                    url = '#/' + def.mainLanguage.code + '/define/' + alias;\r\n            }\r\n\r\n            return url;\r\n        };\r\n\r\n        // If a search term already exists, query the API.\r\n        if ($routeParams.searchTerm) {\r\n            $scope.lookup();\r\n        }\r\n    }\r\n]);\r\n","/**\r\n *\r\n */\r\nangular.module('nkomo.services')\r\n\r\n.factory('DefinitionFactory', ['$http',\r\n    function($http) {\r\n\r\n        var apiEndpoint = 'http://api.dinkomo.vagrant/v0.1/';\r\n        // var apiEndpoint = 'http://api.d.frnk.ca/v0.1/';\r\n\r\n        return {\r\n\r\n            count: function(type)\r\n            {\r\n                type = type || 'word';\r\n\r\n                return $http.get(apiEndpoint + type + '/count');\r\n            },\r\n\r\n            search : function(term, definitionType, langCode, searchMethod)\r\n            {\r\n                langCode = langCode || '';\r\n                definitionType = definitionType || 'word';\r\n                var endpoint = apiEndpoint + definitionType + '/search/' + term;\r\n\r\n                // Narrow search by language.\r\n                endpoint += '?lang=' + langCode;\r\n\r\n                // Specify search method.\r\n                endpoint += '&method=fulltext';\r\n\r\n    \t\t\treturn $http({method: 'GET', url: endpoint});\r\n    \t\t}\r\n        };\r\n    }\r\n]);\r\n","/**\r\n *\r\n */\r\nangular.module('nkomo.rover', [])\r\n\r\n.service('Rover', ['$window', '$sessionStorage', '$route', '$location',\r\n    function($window, $sessionStorage, $route, $location) {\r\n\r\n        // Dev variables.\r\n        this.timestamp = Date.now();\r\n        this.isLocal =\r\n            (window.location.hostname == 'localhost' ||\r\n                window.location.hostname.match(/.*\\.local$/i) ||\r\n                window.location.hostname.match(/.*\\.vagrant$/i)) ? true : false;\r\n\r\n        // Logs a message to the console.\r\n        this.debug = function(msg) {\r\n            if (this.isLocal && console) {\r\n                console.log(msg);\r\n            }\r\n        };\r\n\r\n    }\r\n]);\r\n"],"sourceRoot":"/source/"}