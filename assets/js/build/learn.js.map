{"version":3,"sources":["app.js","controllers/config.js","controllers/main.js","controllers/page.js","controllers/search.js","services/definition.js","services/rover.js"],"names":["nkomoLearningApp","angular","module","_appVersion","_isLocal","window","location","hostname","match","_assetVersion","Date","now","constant","nkomoServices","nkomoDirectives","nkomoControllers","config","$routeProvider","assetVersion","when","redirectTo","templateUrl","controller","otherwise","run","$rootScope","$location","Rover","debug","$scope","$routeParams","DefinitionFactory","params","searchTerm","results","lookup","search","then","response","data","factory","$http","apiEndpoint","count","type","get","term","method","url","service","$window","$sessionStorage","$route","this","timestamp","isLocal","msg","console","log"],"mappings":"AAIA,GAAIA,kBAAmBC,QAAQC,OAAO,SAClC,YAAa,UACb,oBAAqB,mBAAoB,iBAAkB,gBAO3DC,YAAc,QACdC,SAC6B,aAA5BC,OAAOC,SAASC,UACbF,OAAOC,SAASC,SAASC,MAAM,gBAC/BH,OAAOC,SAASC,SAASC,MAAM,kBAAoB,GAAO,EAC9DC,cAAgBL,SAAWM,KAAKC,MAAQR,WAE5CH,kBAAiBY,SAAS,aAAcT,aACvBS,SAAS,qBAAsBR,UAC/BQ,SAAS,eAAgBH,cAM1C,IAAII,eAAgBZ,QAAQC,OAAO,kBAAmB,gBAClDY,gBAAkBb,QAAQC,OAAO,oBAAqB,gBACtDa,iBAAmBd,QAAQC,OAAO,qBAAsB,eAM5DF,kBAAiBgB,QAAQ,iBAAkB,eACvC,SAASC,EAAgBC,GAGrB,MAAOD,GAAeE,KAAK,KACvBC,WAAY,UAIfD,KAAK,UACXE,YAAa,qBAAuBH,EAC3BI,WAAY,mBAIfH,KAAK,UACXE,YAAa,qBAAuBH,EAC3BI,WAAY,mBAIfH,KAAK,sBACXE,YAAa,sBAAwBH,EAC5BI,WAAY,qBAIfH,KAAK,2BACXE,YAAa,0BAA4BH,EAChCI,WAAY,yBAIfC,WACNH,WAAY,aAMdI,KAAK,aAAc,YAAa,QAC7B,SAAUC,EAAYC,EAAWC,GAE7BA,EAAMC,MAAM;AC9EpB3B,QAAQC,OAAO,qBAEdoB,WAAW,oBAAqB,SAC7B,SAASO;ACHb5B,QAAQC,OAAO,qBAAqBoB,WAAW,kBAAmB,SAAU,eACxE,SAASO,EAAQX,GAEbW,EAAOX,aAAeA;ACD9BjB,QAAQC,OAAO,qBAEdoB,WAAW,kBAAmB,SAC3B,SAASO;ACHb5B,QAAQC,OAAO,qBAEdoB,WAAW,oBAAqB,SAAU,eAAgB,oBAAqB,QAC5E,SAASO,EAAQC,EAAcC,EAAmBJ,GAE9CA,EAAMC,MAAM,oBAEZC,EAAOG,OAASF,EAGhBD,EAAOI,WAAaH,EAAaG,WAGjCJ,EAAOK,WAEPL,EAAOM,OAAS,WAEZR,EAAMC,MAAM,eAAgBC,EAAOI,WAAY,QAE/CF,EAAkBK,OAAOP,EAAOI,YAAYI,KAGxC,SAASC,GACLT,EAAOK,QAAUI,EAASC,MAI9B,SAASD,GACLX,EAAMC,MAAM,SACZD,EAAMC,MAAMU;AC7BhCrC,QAAQC,OAAO,kBAEdsC,QAAQ,qBAAsB,QAC3B,SAASC,GAEL,GAAIC,GAAc,kCAGlB,QAEIC,MAAO,SAASC,GAIZ,MAFAA,GAAOA,GAAQ,OAERH,EAAMI,IAAIH,EAAcE,EAAO,WAG1CR,OAAS,SAASU,EAAMF,GAI7B,MAFSA,GAAOA,GAAQ,OAEjBH,GACMM,OAAQ,MACRC,IAAKN,EAAcE,EAAO,WAAaE;ACvB3D7C,QAAQC,OAAO,kBAEd+C,QAAQ,SAAU,UAAW,kBAAmB,SAAU,YACvD,SAASC,EAASC,EAAiBC,EAAQ1B,GAGvC2B,KAAKC,UAAY5C,KAAKC,MACtB0C,KAAKE,QAC4B,aAA5BlD,OAAOC,SAASC,UACbF,OAAOC,SAASC,SAASC,MAAM,gBAC/BH,OAAOC,SAASC,SAASC,MAAM,kBAAoB,GAAO,EAGlE6C,KAAKzB,MAAQ,SAAS4B,GACdH,KAAKE,SAAWE,SAChBA,QAAQC,IAAIF","file":"learn.js","sourcesContent":["/**\n * Main angular application.\n *\n */\nvar nkomoLearningApp = angular.module('learn', [\n    'ngStorage', 'ngRoute',\n    'nkomo.controllers', 'nkomo.directives', 'nkomo.services', 'nkomo.rover'\n]);\n\n//\n// App constants.\n//\n\nvar _appVersion = '0.0.2';\nvar _isLocal =\n    (window.location.hostname == 'localhost' ||\n        window.location.hostname.match(/.*\\.local$/i) ||\n        window.location.hostname.match(/.*\\.vagrant$/i)) ? true : false;\nvar _assetVersion = _isLocal ? Date.now() : _appVersion;\n\nnkomoLearningApp.constant('appVersion', _appVersion)\n                .constant('isLocalEnvironment', _isLocal)\n                .constant('assetVersion', _assetVersion);\n\n//\n// Initialize modules so that we can use them from different files.\n//\n\nvar nkomoServices = angular.module('nkomo.services', ['nkomo.rover']);\nvar nkomoDirectives = angular.module('nkomo.directives', ['nkomo.rover']);\nvar nkomoControllers = angular.module('nkomo.controllers', ['nkomo.rover']);\n\n//\n// Configures the application.\n//\n\nnkomoLearningApp.config(['$routeProvider', 'assetVersion',\n    function($routeProvider, assetVersion) {\n\n        // Landing page.\n        return $routeProvider.when('/', {\n            redirectTo: '/dict'\n        })\n\n        // About page.\n        .when('/about', {\n\t\t\ttemplateUrl: '/views/about.html?' + assetVersion,\n            controller: 'PageController'\n\t\t})\n\n        // Stats page.\n        .when('/stats', {\n\t\t\ttemplateUrl: '/views/stats.html?' + assetVersion,\n            controller: 'PageController'\n\t\t})\n\n        // Search pages.\n        .when('/dict/:searchTerm?', {\n\t\t\ttemplateUrl: '/views/search.html?' + assetVersion,\n            controller: 'SearchController'\n        })\n\n        // Dictionary pages.\n        .when('/:langCode/:searchTerm?', {\n\t\t\ttemplateUrl: '/views/definition.html?' + assetVersion,\n            controller: 'DefinitionController'\n        })\n\n        // Else, redirect to search page.\n        .otherwise({\n\t\t\tredirectTo: '/dict'\n\t\t});\n    }\n])\n\n// Runs the application.\n.run(['$rootScope', '$location', 'Rover',\n    function ($rootScope, $location, Rover) {\n\n        Rover.debug('Running app...');\n\n    }\n]);\n","\r\nangular.module('nkomo.controllers')\r\n\r\n.controller('ConfigController', ['$scope',\r\n    function($scope) {\r\n\r\n    }\r\n]);\r\n","\r\nangular.module('nkomo.controllers').controller('MainController', ['$scope', 'assetVersion',\r\n    function($scope, assetVersion) {\r\n\r\n        $scope.assetVersion = assetVersion;\r\n\r\n    }\r\n]);\r\n","/**\r\n * \r\n */\r\nangular.module('nkomo.controllers')\r\n\r\n.controller('PageController', ['$scope',\r\n    function($scope) {\r\n\r\n    }\r\n]);\r\n","/**\r\n *\r\n */\r\nangular.module('nkomo.controllers')\r\n\r\n.controller('SearchController', ['$scope', '$routeParams', 'DefinitionFactory', 'Rover',\r\n    function($scope, $routeParams, DefinitionFactory, Rover) {\r\n\r\n        Rover.debug('SearchController');\r\n\r\n        $scope.params = $routeParams;\r\n\r\n        // Search term.\r\n        $scope.searchTerm = $routeParams.searchTerm;\r\n\r\n        // Search results.\r\n        $scope.results = [];\r\n\r\n        $scope.lookup = function()\r\n        {\r\n            Rover.debug('Looking up \"'+ $scope.searchTerm +'\"...');\r\n\r\n            DefinitionFactory.search($scope.searchTerm).then(\r\n\r\n                // On success.\r\n                function(response) {\r\n                    $scope.results = response.data;\r\n                },\r\n\r\n                // On error.\r\n                function(response) {\r\n                    Rover.debug('Error');\r\n                    Rover.debug(response);\r\n                }\r\n            );\r\n        };\r\n    }\r\n]);\r\n","/**\r\n *\r\n */\r\nangular.module('nkomo.services')\r\n\r\n.factory('DefinitionFactory', ['$http',\r\n    function($http) {\r\n\r\n        var apiEndpoint = 'http://api.dinkomo.vagrant/v0.1/';\r\n        // var apiEndpoint = 'http://api.d.frnk.ca/v0.1/';\r\n\r\n        return {\r\n\r\n            count: function(type)\r\n            {\r\n                type = type || 'word';\r\n\r\n                return $http.get(apiEndpoint + type + '/count');\r\n            },\r\n\r\n            search : function(term, type)\r\n            {\r\n                type = type || 'word';\r\n\r\n    \t\t\treturn $http({\r\n                    method: 'GET',\r\n                    url: apiEndpoint + type + '/search/' + term\r\n                });\r\n    \t\t}\r\n        };\r\n    }\r\n]);\r\n","/**\r\n *\r\n */\r\nangular.module('nkomo.rover', [])\r\n\r\n.service('Rover', ['$window', '$sessionStorage', '$route', '$location',\r\n    function($window, $sessionStorage, $route, $location) {\r\n\r\n        // Dev variables.\r\n        this.timestamp = Date.now();\r\n        this.isLocal =\r\n            (window.location.hostname == 'localhost' ||\r\n                window.location.hostname.match(/.*\\.local$/i) ||\r\n                window.location.hostname.match(/.*\\.vagrant$/i)) ? true : false;\r\n\r\n        // Logs a message to the console.\r\n        this.debug = function(msg) {\r\n            if (this.isLocal && console) {\r\n                console.log(msg);\r\n            }\r\n        };\r\n\r\n    }\r\n]);\r\n"],"sourceRoot":"/source/"}